@model SistemErasmusRazmjena.Models.ViewModels.PrijavaViewModel

@{
    ViewData["Title"] = "Application Details";
}

<h1>Detalji prijave</h1>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}

<div>
    <h4>Prijava</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-3">Student</dt>
        <dd class="col-sm-9">@Model.StudentName</dd>

        <dt class="col-sm-3">Akademska godina</dt>
        <dd class="col-sm-9">@Model.AkademskaGodina</dd>

        <dt class="col-sm-3">Univerzitet</dt>
        <dd class="col-sm-9">@Model.Naziv</dd>

        <dt class="col-sm-3">Semestar</dt>
        <dd class="col-sm-9">@Model.Semestar</dd>

        <dt class="col-sm-3">Opis</dt>
        <dd class="col-sm-9">@Model.Opis</dd>

        <dt class="col-sm-3">Status</dt>
        <dd class="col-sm-9">
            <span class="badge @(Model.Status == StatusPrijave.UTOKU ? "bg-warning" :
                                                                     Model.Status == StatusPrijave.USPJESNA ? "bg-success" : "bg-danger")">
                @Model.Status
            </span>
        </dd>
    </dl>

    @if (User.IsInRole("Admin") && Model.Status == StatusPrijave.UTOKU)
    {
        <div class="card mb-4">
            <div class="card-header">
                <h5>Promijeni status prijave</h5>
            </div>
            <div class="card-body">
                <form asp-action="UpdateStatus" method="post" class="d-flex gap-2">
                    <input type="hidden" name="id" value="@Model.PrijavaID" />
                    <button type="submit" name="status" value="@StatusPrijave.USPJESNA" class="btn btn-success">
                        Odobri prijavu
                    </button>
                    <button type="submit" name="status" value="@StatusPrijave.NEUSPJESNA" class="btn btn-danger">
                        Odbij prijavu
                    </button>
                </form>
            </div>
        </div>
    }

    <h4>Dokumentacija</h4>
    <div class="card mb-4">
        <div class="card-body">
            <ul class="list-group list-group-flush">
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    CV
                    <span class="badge @(Model.DokumentacijaOptions.CV ? "bg-success" : "bg-danger") rounded-pill">
                        @(Model.DokumentacijaOptions.CV ? "Poslano" : "Nije poslano")
                    </span>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    Motivaciono pismo
                    <span class="badge @(Model.DokumentacijaOptions.MotivacionoPismo ? "bg-success" : "bg-danger") rounded-pill">
                        @(Model.DokumentacijaOptions.MotivacionoPismo ? "Poslano" : "Nije poslano")
                    </span>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    Ugovor o učenju
                    <span class="badge @(Model.DokumentacijaOptions.UgovorOUcenju ? "bg-success" : "bg-danger") rounded-pill">
                        @(Model.DokumentacijaOptions.UgovorOUcenju ? "Poslano" : "Nije poslano")
                    </span>
                </li>
            </ul>
        </div>
    </div>

    <h4>Predmeti</h4>
    <table class="table">
        <thead>
            <tr>
                <th>Predmeti matičnog univerzitet</th>
                <th>Predmeti stranog univerziteta</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var predmet in Model.Predmeti)
            {
                <tr id="subject-@predmet.Id">
                    <td>@predmet.PredmetHome</td>
                    <td>@predmet.PredmetAccepting</td>
                    <td>
                        <span class="badge @(predmet.Status == "ODOBRENO" ? "bg-success" :
                                                                           predmet.Status == "ODBIJENO" ? "bg-danger" : "bg-warning")">
                        @predmet.Status
                    </span>
                </td>
                </tr>
            }
        </tbody>
    </table>
    @if (User.IsInRole("Student"))
    {
        <div class="mt-4">
            @if (Model.Status == StatusPrijave.UTOKU || Model.Status == StatusPrijave.USPJESNA)
            {
                <a asp-action="Edit" asp-route-id="@Model.PrijavaID" class="btn btn-primary">
                    <i class="bi bi-pencil-square"></i> Uredi prijavu
                </a>
            }
            else if (Model.Status == StatusPrijave.NEUSPJESNA)
            {
                <a asp-action="Reapply" asp-route-id="@Model.PrijavaID" class="btn btn-warning">
                    <i class="bi bi-arrow-repeat"></i> Ponovo se prijavi
                </a>
            }
        </div>
    }

    @if (User.IsInRole("ECTSKoordinator"))
    {
        <a asp-action="ManageSubjects" asp-route-id="@Model.PrijavaID" class="btn btn-primary">
            <i class="bi bi-pencil-square"></i> Upravljaj predmetima
        </a>
    }

    @if (User.IsInRole("Admin"))
    {
        <button id="posaljiNotifikaciju" class="btn btn-warning" data-prijava-id="@Model.PrijavaID">
            Pošalji notifikaciju
        </button>
    }



    <div class="mt-4">
        @if (User.IsInRole("Student"))
        {
            <a asp-action="MyApplications" class="btn btn-secondary">
                <i class="bi bi-arrow-left"></i> Nazad na listu
            </a>
        }
        else if (User.IsInRole("Admin") || User.IsInRole("ECTSKoordinator"))
        {
            <a asp-action="Index" class="btn btn-secondary">
                <i class="bi bi-arrow-left"></i> Nazad na listu
            </a>
        }
    </div>


</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#subjects-table').on('click', '.status-btn', function() {
                var button = $(this);
                var predmetId = button.data('predmet-id');
                var status = button.data('status');
                var row = $('#subject-' + predmetId);

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("UpdateSubjectStatus", "Prijava")',
                    data: { predmetId: predmetId, status: status },
                    success: function () {
                        $('.alert-success').remove();
                        $('body').prepend('<div class="alert alert-success alert-dismissible fade show" role="alert">' +
                            'Subject status successfully updated.' +
                            '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>' +
                            '</div>');

                        var statusBadge = row.find('.status-badge');
                        statusBadge.removeClass('bg-success bg-danger bg-warning');

                        var actionCell = row.find('.action-cell');
                        if (status === 'ODOBRENO') {
                            statusBadge.addClass('bg-success').text('ODOBRENO');
                            actionCell.html(
                                '<button type="button" class="btn btn-sm btn-outline-danger status-btn" ' +
                                'data-predmet-id="' + predmetId + '" data-status="ODBIJENO">' +
                                'Change to Rejected</button>'
                            );
                        } else if (status === 'ODBIJENO') {
                            statusBadge.addClass('bg-danger').text('ODBIJENO');
                            actionCell.html(
                                '<button type="button" class="btn btn-sm btn-outline-success status-btn" ' +
                                'data-predmet-id="' + predmetId + '" data-status="ODOBRENO">' +
                                'Change to Approved</button>'
                            );
                        }
                    },
                    error: function () {
                        alert('An error occurred while updating the subject status.');
                    }
                });
            });

        document.getElementById("posaljiNotifikaciju").addEventListener("click", function () {
            const prijavaId = parseInt(this.getAttribute("data-prijava-id"));
            const sadrzaj = `Notification content for application ${prijavaId}`;

            if (!sadrzaj || sadrzaj.trim() === "") {
                alert("Sadržaj notifikacije ne može biti prazan.");
                return;
            }

            fetch('/api/Notifikacija/create', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ prijavaId, sadrzaj })
            })
            .then(response => {
                if (response.ok) {
                    alert("Notifikacija je uspješno poslana!");
                } else {
                    return response.json().then(err => {
                        console.error("Validation Error:", err.errors);
                        alert("Došlo je do greške prilikom slanja notifikacije. Provjerite podatke.");
                    });
                }
            })
            .catch(error => {
                console.error("Fetch error:", error);
                alert("Došlo je do greške prilikom slanja notifikacije.");
            });
        });
        });
    </script>
}

