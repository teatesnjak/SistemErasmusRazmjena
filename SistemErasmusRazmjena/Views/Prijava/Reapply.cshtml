@model SistemErasmusRazmjena.Models.ViewModels.PrijavaEditViewModel

@{
    ViewData["Title"] = "Reapply";
}

<h1>Reapply to Program</h1>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}

<div class="alert alert-info">
    <i class="bi bi-info-circle"></i> Your previous application was rejected. You can modify your application and resubmit it.
</div>

<div class="row">
    <div class="col-md-12">
        <form asp-action="Reapply" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="PrijavaID" />
            <input type="hidden" asp-for="ErasmusProgramID" />
            <input type="hidden" asp-for="StudentID" />
            <input type="hidden" asp-for="AkademskaGodina" />
            <input type="hidden" asp-for="Naziv" />
            <input type="hidden" asp-for="Semestar" />
            <input type="hidden" asp-for="IsReapplication" value="true" />

            <div class="card mb-4">
                <div class="card-header">
                    <h5>Application Details</h5>
                </div>
                <div class="card-body">
                    <dl class="row">
                        <dt class="col-sm-3">Academic Year</dt>
                        <dd class="col-sm-9">@Model.AkademskaGodina</dd>

                        <dt class="col-sm-3">University</dt>
                        <dd class="col-sm-9">@Model.Naziv</dd>

                        <dt class="col-sm-3">Semester</dt>
                        <dd class="col-sm-9">@Model.Semestar</dd>
                    </dl>
                </div>
            </div>

            <div class="card mb-4">
                <div class="card-header">
                    <h5>Documentation</h5>
                </div>
                <div class="card-body">
                    <p class="text-muted mb-3">
                        Please check the boxes for documents you have prepared for your application.
                    </p>
                    <div class="form-check mb-2">
                        <input class="form-check-input" type="checkbox" asp-for="DokumentacijaOptions.CV" id="cv" />
                        <label class="form-check-label" for="cv">CV</label>
                    </div>
                    <div class="form-check mb-2">
                        <input class="form-check-input" type="checkbox" asp-for="DokumentacijaOptions.MotivacionoPismo" id="motivationLetter" />
                        <label class="form-check-label" for="motivationLetter">Motivation Letter</label>
                    </div>
                    <div class="form-check mb-2">
                        <input class="form-check-input" type="checkbox" asp-for="DokumentacijaOptions.UgovorOUcenju" id="learningAgreement" />
                        <label class="form-check-label" for="learningAgreement">Learning Agreement</label>
                    </div>
                </div>
            </div>

            <div class="card mb-4" id="subjectsCard">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5>Subjects</h5>
                    <button type="button" class="btn btn-sm btn-primary" id="addSubjectBtn">
                        <i class="bi bi-plus-circle"></i> Add Subject
                    </button>
                </div>
                <div class="card-body">
                    <p class="text-muted mb-3">
                        Please list the subjects you plan to take at the accepting university and their equivalents at your home university.
                    </p>
                    <div id="subjectsContainer">
                        @for (int i = 0; i < Model.PrijedlogPredmeta.Count; i++)
                        {
                            <div class="row mb-3 subject-row">
                                <input type="hidden" asp-for="PrijedlogPredmeta[i].PredmetID" />
                                <input type="hidden" asp-for="PrijedlogPredmeta[i].Status" />
                                <div class="col-md-5">
                                    <label class="form-label">Home Subject</label>
                                    <input type="text" class="form-control" asp-for="PrijedlogPredmeta[i].PredmetHome" />
                                    <span asp-validation-for="PrijedlogPredmeta[i].PredmetHome" class="text-danger"></span>
                                </div>
                                <div class="col-md-5">
                                    <label class="form-label">Accepting Subject</label>
                                    <input type="text" class="form-control" asp-for="PrijedlogPredmeta[i].PredmetAccepting" />
                                    <span asp-validation-for="PrijedlogPredmeta[i].PredmetAccepting" class="text-danger"></span>
                                </div>
                                <div class="col-md-2 d-flex align-items-end">
                                    <button type="button" class="btn btn-sm btn-danger remove-subject-btn mb-2">
                                        <i class="bi bi-trash"></i> Remove
                                    </button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <div class="mt-4">
                <button type="submit" class="btn btn-primary">Submit Reapplication</button>
                <a asp-action="Details" asp-route-id="@Model.PrijavaID" class="btn btn-secondary">Cancel</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            // Variable to track the current count of subjects
            var subjectCounter = $('.subject-row').length;

            // Add subject button
            $('#addSubjectBtn').click(function () {
                // Clone the template from a string
                var template = `
                    <div class="row mb-3 subject-row">
                        <input type="hidden" name="PrijedlogPredmeta[${subjectCounter}].PredmetID" value="0" />
                        <input type="hidden" name="PrijedlogPredmeta[${subjectCounter}].Status" value="0" />
                        <div class="col-md-5">
                            <label class="form-label">Home Subject</label>
                            <input type="text" class="form-control" name="PrijedlogPredmeta[${subjectCounter}].PredmetHome" required />
                        </div>
                        <div class="col-md-5">
                            <label class="form-label">Accepting Subject</label>
                            <input type="text" class="form-control" name="PrijedlogPredmeta[${subjectCounter}].PredmetAccepting" required />
                        </div>
                        <div class="col-md-2 d-flex align-items-end">
                            <button type="button" class="btn btn-sm btn-danger remove-subject-btn mb-2">
                                <i class="bi bi-trash"></i> Remove
                            </button>
                        </div>
                    </div>`;

                // Add to container
                $('#subjectsContainer').append(template);
                subjectCounter++;
            });

            // Remove subject button (using event delegation)
            $('#subjectsContainer').on('click', '.remove-subject-btn', function () {
                $(this).closest('.subject-row').remove();

                // Reindex remaining rows
                $('.subject-row').each(function (index) {
                    $(this).find('input, select').each(function () {
                        var name = $(this).attr('name');
                        if (name) {
                            // Update name attribute with correct index
                            var newName = name.replace(/PrijedlogPredmeta\[\d+\]/g, 'PrijedlogPredmeta[' + index + ']');
                            $(this).attr('name', newName);
                        }
                    });
                });

                // Update counter
                subjectCounter = $('.subject-row').length;
            });

            // Form validation
            $('form').submit(function(e) {
                var valid = true;
                var atLeastOneSubject = $('.subject-row').length > 0;

                if (!atLeastOneSubject) {
                    alert("You must add at least one subject.");
                    e.preventDefault();
                    return false;
                }

                // Check each row has both fields filled
                $('.subject-row').each(function() {
                    var home = $(this).find('input[name$=".PredmetHome"]').val();
                    var accepting = $(this).find('input[name$=".PredmetAccepting"]').val();

                    if (!home || !accepting) {
                        valid = false;
                    }
                });

                if (!valid) {
                    alert("All subject fields must be filled out.");
                    e.preventDefault();
                    return false;
                }
            });
        });
    </script>
}
